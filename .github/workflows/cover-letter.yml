name: Generate Cover Letter on Issue Creation
on:
  issues:
    types: [opened]

jobs:
  generate_cover_letter:
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Get issue description
        id: issue_body
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            return issue.data.body;

      - name: Extract variables from issue description & Replace variables in template files
        id: extract_vars
        run: |
          ISSUE_BODY=${{ steps.issue_body.outputs.result }}

          declare -A map
          while IFS=':' read -r key value; do
              key=$(echo "$key" | tr -d '[]')
              value=$(echo "$value" | xargs)  # Trim leading and trailing spaces
              map["$key"]="${value}"  
          done <<< "${ISSUE_BODY//\\r\\n/$'\n'}"

          for key in "${!map[@]}"; do
              sed -i "s|\[$key\]|${map[$key]}|g" cover-letter.tex
              sed -i "s|\[$key\]|${map[$key]}|g" cover-letter-content.tex
          done

      - name: Compile LaTeX to PDF
        uses: addnab/docker-run-action@v3
        with:
          image: thomasweise/docker-texlive-full:latest
          options: -v ${{ github.workspace }}:/data
          run: |
            cd /data
            pdflatex cover-letter.tex

      - name: Upload cover letter PDF as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: cover-letter
          path: cover-letter.pdf

      - name: Comment on issue with artifact link
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const artifactUrl = `https://github.com/${{ github.repository_owner }}/${{ github.event.repository.name }}/actions/runs/${{ github.run_id }}`;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `Here is your generated cover letter: [Download PDF](${artifactUrl})`
            });
