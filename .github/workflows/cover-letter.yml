name: Generate Cover Letter on Issue Creation
on:
  issues:
    types: [opened]

jobs:
  generate_cover_letter:
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Get issue description
        id: issue_body
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });

            return issue.data.body;

      - name: Extract variables from issue description & Replace variables in template files
        id: extract_vars
        run: |
          ISSUE_BODY=${{ steps.issue_body.outputs.result }}

          declare -A map
          while IFS=':' read -r key value; do
              key=$(echo "$key" | tr -d '[]')
              value=$(echo "$value" | xargs)  # Trim leading and trailing spaces
              map["$key"]="${value}"  
          done <<< "${ISSUE_BODY//\\r\\n/$'\n'}"

          echo `FILE_NAME=${map["Company Name"]}.pdf` >> $GITHUB_ENV

          for key in "${!map[@]}"; do
              sed -i "s|\[$key\]|${map[$key]}|g" cover-letter.tex
              sed -i "s|\[$key\]|${map[$key]}|g" cover-letter-content.tex
          done

      - name: Compile LaTeX to PDF
        uses: addnab/docker-run-action@v3
        with:
          image: thomasweise/docker-texlive-full:latest
          options: -v ${{ github.workspace }}:/data
          run: |
            cd /data
            pdflatex cover-letter.tex

      - name: Upload cover letter PDF as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: cover-letter
          path: cover-letter.pdf

  commit:
    name: Commit resume to Profile
    needs: generate_cover_letter
    runs-on: ubuntu-latest

    steps:
      - name: Check out profile repo
        uses: actions/checkout@v4
        with:
          repository: sahrohit/sahrohit
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: Download PDF artifact
        uses: actions/download-artifact@v4
        with:
          name: cover-letter

      - name: Get issue description
        id: issue_body_again
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });

            return issue.data.title;

      - name: Move PDF to public directory
        run: |
          mv cover-letter.pdf cover-letter/generated/${{ steps.issue_body_again.outputs.result }}.pdf

      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Added Cover Letter PDF

      - name: Add comment to issue with link to file
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue_number = context.issue.number;
            const repo = context.repo.repo;
            const owner = context.repo.owner;
            const fileName = context.issue.title + '.pdf';
            const url = `https://github.com/${owner}/${repo}/blob/main/cover-letter/generated/${context.issue.title}`;
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number,
              body: `Your cover letter has been generated: [${fileName}](${url})`
            });
